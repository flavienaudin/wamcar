/* ===========================================================================
   Button
   =========================================================================== */


/*
   Style
   ===================================== */

@mixin buttonHeight {
    height: rem-calc(40);
    @include breakpoint(medium) {
        height: rem-calc(60);
    }
}

@mixin buttonHeightCompact {
    height: rem-calc(32);
    @include breakpoint(medium) {
        height: rem-calc(48);
    }
}

@mixin buttonPadding {
    padding-right: rem-calc(20);
    padding-left: rem-calc(20);
}

@mixin buttonStyle {
    @include buttonHeight;
    @include buttonPadding;
    position: relative;
    display: block;
    justify-content: center;
    align-items: center;
    text-align: center;
    background: $primary-color;
    font-weight: bold;
    border-radius: rem-calc(30);
    color: white;
    border: rem-calc(2) solid $primary-color;
    transition: $global-transition;
}


/*
   Theme
   ===================================== */

@mixin buttonTheme($background, $color, $hover: false) {
    background: $background;
    color: $color;
    border-color: currentColor;
    &:hover,
    &:focus {
        @if $hover {
            background: $hover;
            border-color: $hover;
            color: white;
        }
        @else {
            background: transparent;
        }
    }
}


/*
   Class
   ===================================== */

button {
    color: $body-font-color;
    cursor: pointer;
}

a.button {
    display: flex;
    &:focus {
        background: $primary-color;
        color: $white;
    }
}

.button {
    @include buttonStyle;
    &:hover {
        background: white;
        color: $primary-color;
        .loader {
            .loader-child {
                &:before {
                    background-color: $primary-color;
                }
            }
        }
    }
    &::before {
        font-weight: normal;
        @include breakpoint(xlarge) {
            font-size: rem-calc(20);
        }
    }
    /* Size */
    .form-compact & {
        @include buttonHeightCompact;
    }

    &.small {
        @include breakpoint(medium) {
            height: rem-calc(50);
        }
    }
    &.expand-height {
        height: auto;
        min-height: rem-calc(40);
        @include breakpoint(medium) {
            min-height: rem-calc(60);
        }
    }

    /* Theme */
    &.white {
        @include buttonTheme(white, $primary-color, $primary-color);
    }

    &.dark-blue {
        background-color: $white;
        color: $dark-blue;
        border-color: $dark-blue;
        &:hover,
        &:focus {
            background-color: $gray-alt2;
            color: $dark-blue;
            border-color: $white;
        }
    }

    &.gray-light {
        @include buttonTheme(white, $dark-blue-peexeo, $dark-blue);
    }

    /* Add */
    &.add {
        background: $dark-gray;
        color: white;
        border-color: $dark-gray;
        &::before {
            font-size: rem-calc(16);
            color: $primary-color;
        }
        &:hover {
            background: white;
            color: $dark-gray;
        }
    }
    &.reverse {
        background: white;
        color: $primary-color;
        border-color: $primary-color;
        &::before {
            font-size: rem-calc(16);
            color: $primary-color;
        }

        &:hover {
            background: $primary-color;
            color: white;
            border-color: white;
            &::before {
                color: white;
            }
        }

    }
    /* remove */
    &.remove {
        width: rem-calc(60);
        height: rem-calc(60);
        background: $medium-gray;
        border-color: $medium-gray;
        border-radius: 50%;
        color: white;
        &::before {
            margin-right: 0;
        }
        &:hover {
            background: white;
            color: $medium-gray;
        }
    }
    /* Form margin */
    form & {
        margin-top: rem-calc(10);
    }
    /* Loader */
    .loader {
        opacity: 0;
        visibility: hidden;
        transition: $global-transition;
    }
    &.loader-visible {
        .loader {
            opacity: 1;
            visibility: visible;
        }
    }

    &.square {
        border-radius: 0;
    }
}
