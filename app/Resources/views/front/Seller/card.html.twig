{% extends 'front/Layout/layout.html.twig' %}

{% block mainClass %}no-padding-top profil-seller-main{% endblock %}

{% set isUserProPageProfil = (user.isPro) %}
{% set isUserPersonalPageProfil = (user.isPersonal) %}

{% block title %}
    {% if userIsMe %}
        {{ 'user.title.pro.mine'|trans }}
    {% else %}
        {{ 'user.title.pro.other'|trans({'%username%':user.fullName}) }}
    {% endif %}
{% endblock %}

{% block meta_description %}{{ user.presentationTitle is not null ? user.presentationTitle : 'user.presentation.title.pro'|trans }}{% endblock %}

{% set seo_img_url = user.avatar|avatar('user_thumbnail', user.fullName) %}

{% set breadcrumbs = [
    {
        'name': block('title'),
        'href': app.request.requestUri
    }
] %}

{% block body %}
    {% include 'front/User/includes/seller_profil_header.html.twig' %}

    <section class="row">
        <div class="profil-body column small-12">
            <div class="row">
                {# Left column #}
                <div class="js-profil-seller-left-column profil-seller-left-column column small-12 large-8">
                    {% if not isLogged %}
                        <div class="block-grid align-middle block-dark-blue padding-bottom-1 padding-top-1 margin-bottom-1">
                            <div class="column small-12 large-8 text-justify">
                                {{ 'user.registration.block_insert'|trans({'%username%':user.firstname|title})|raw }}</div>
                            <div class="column small-12 medium-6 medium-offset-3 large-4 large-offset-0">
                                <a href="{{ path('register', {'type': constant("Wamcar\\User\\PersonalUser::TYPE")}) }}"
                                   class="button expand-height square dark-blue">
                                    {{ 'global.button.register'|trans }}</a>
                            </div>
                        </div>
                    {% endif %}

                    {% if user.description is not empty or presentationForm is not null %}
                        <div class="profil-section ">
                            {% if presentationForm is not null %}
                                {{ form_start(presentationForm, {
                                    'attr': {'class': 'form-compact', 'data-abide' : '','novalidate': 'novalidate'}
                                }) }}
                            {% endif %}
                            <h2>
                                {% if presentationForm is not null %}
                                    <span class="profil-section-action icon-pen"
                                          data-toggle="jsPresentationTitleInput jsDescriptionInput jsDescriptionText jsSubmitInput">
                                    </span>
                                {% endif %}
                                {{ user.presentationTitle is not null ? user.presentationTitle : 'user.presentation.title.pro'|trans }}
                            </h2>

                            {% if presentationForm is not null %}
                                <div id="jsPresentationTitleInput" class="is-hidden" data-toggler="is-hidden">
                                    {{ form_widget(presentationForm.presentationTitle, {
                                        'label': 'user.profile.edit.form.presentationTitle.label'|trans,
                                        'required': false,
                                        'attr' : {
                                            'placeholder': 'user.profile.edit.form.presentationTitle.placeholder'|trans,
                                            'maxlength': 50
                                        }
                                    }) }}
                                </div>
                            {% endif %}

                            <div id="jsDescriptionText" data-toggler="is-hidden" class="text-justify">
                                {% if user.description %}
                                    {{ user.description|nl2br }}
                                {% elseif userIsMe %}
                                    {{ 'user.presentation.empty'|trans }}
                                {% endif %}
                            </div>

                            {% if presentationForm is not null %}
                                <div id="jsDescriptionInput" class="is-hidden" data-toggler="is-hidden">
                                    {{ form_widget(presentationForm.description, {
                                        'label': 'user.profile.edit.form.presentation.label'|trans,
                                        'required': false
                                    }) }}
                                </div>
                                <div id="jsSubmitInput" class="is-flex align-right is-hidden" data-toggler="is-hidden">
                                    <input type="submit" class="button" value="{{ 'global.button.validate'|trans }}">
                                </div>
                            {% endif %}

                            {% if presentationForm is not null %}{{ form_end(presentationForm) }}{% endif %}
                        </div>
                    {% endif %}

                    {% if user.appointmentText is not empty %}
                        <div class="block-grid align-middle block-dark-blue padding-bottom-1 padding-top-1 margin-bottom-1">
                            <div class="column small-12 large-8 text-justify">{{ user.appointmentText }}</div>
                            <div class="column small-12 medium-6 medium-offset-3 large-4 large-offset-0">
                                <a href="{{ path('front_conversation_create', {'id': user.id, (constant("AppBundle\\Controller\\Front\\ProContext\\ConversationController::QUERYPARAM_APPOINTMENT")):true, '_fragment':'message-answer-block'}) }}"
                                   class="button expand-height square dark-blue" data-wtaction="LM RDV"
                                   data-wtfrom="{{ app.user|wtFromDataAttrValue }}" data-wtto="{{ user|wtToDataAttrValue }}">
                                    {{ 'user.appointment.call_to_action'|trans({'%username%':user.firstName|title}) }}</a>
                            </div>
                        </div>
                    {% endif %}

                    {% if user.youtubeVideoUrl is not empty or videoPresentationForm is not null %}
                        <div class="profil-section">
                            <h2>
                                {% if videoPresentationForm is not null %}
                                    <span class="profil-section-action icon-pen"
                                          data-toggle="jsVideoPresentationPreview jsVideoPresentationForm">
                                    </span>
                                {% endif %}
                                {{ 'user.video.title'|trans({'%username%':user.fullName}) }}
                            </h2>
                            <div id="jsVideoPresentationPreview" data-toggler="is-hidden" {{ videoPresentationForm is not null and not videoPresentationForm.vars.valid ? 'class="is-hidden"' }}>
                                {% set userYoutubeVideoId =  user.youtubeVideoId %}
                                {% if userYoutubeVideoId is not empty %}
                                    <div class="youtube-player" data-id="{{ userYoutubeVideoId }}"></div>
                                {% elseif videoPresentationForm is not null and videoPresentationForm is not null %}
                                    <div>
                                        {% if user.videoShortText is empty %}
                                            <i>{{ 'user.video.placeholder.all_empty'|trans }}</i>
                                        {% else %}
                                            <div class="callout warning small"><i class="icon-warning2">{{ 'user.video.placeholder.with_text'|trans }}</i></div>
                                        {% endif %}
                                    </div>
                                {% endif %}

                                {% if user.videoShortText is not empty %}
                                    <div class="margin-top-2">
                                        {{ user.videoShortText|raw }}
                                        {% if user.videoText is not empty %}
                                            <p><a data-toggle="userVideoText showMore showLess">
                                                    <span id="showMore" data-toggler=".is-hidden" class="text-underline">{{ 'global.button.show_more'|trans }}</span>
                                                    <span id="showLess" data-toggler=".is-hidden" class="text-underline is-hidden">{{ 'global.button.show_less'|trans }}</span>
                                                </a></p>
                                            <div id="userVideoText" class="js-show-videoText is-hidden" data-toggler=".is-hidden">
                                                {{ user.videoText|raw }}
                                                {% if user.videoText|length > 2000 %}
                                                    <a data-toggle="userVideoText showMore showLess"><span class="text-underline">{{ 'global.button.show_less'|trans }}</span></a>
                                                {% endif %}
                                            </div>
                                        {% endif %}
                                    </div>
                                {% endif %}
                            </div>
                            {% if videoPresentationForm is not null %}
                                <div id="jsVideoPresentationForm"  {{ videoPresentationForm.vars.valid ? 'class="is-hidden"' }} data-toggler="is-hidden">
                                    {{ form_start(videoPresentationForm, {
                                        'attr':{'data-abide': 'data-abide', 'novalidate': 'novalidate'}
                                    }) }}

                                    {{ form_widget(videoPresentationForm.youtubeVideoUrl, {
                                        'label' : 'user.profile.edit.form.video.youtubeVideoUrl.label'|trans,
                                        'error_message': 'user.profile.edit.form.video.youtubeVideoUrl.invalidMEssage'|trans,
                                        'required': false,
                                        'attr': {
                                            'placeholder': 'user.profile.edit.form.video.youtubeVideoUrl.placeholder'|trans,
                                        }
                                    }) }}
                                    {{ form_errors(videoPresentationForm.youtubeVideoUrl) }}

                                    {{ form_row(videoPresentationForm.shortText, {
                                        'label': 'user.profile.edit.form.video.shortText.label'|trans,
                                        'required': false
                                    }) }}

                                    {{ form_row(videoPresentationForm.longText, {
                                        'label': 'user.profile.edit.form.video.longText.label'|trans,
                                        'label_attr':{'class': 'margin-top-2'},
                                        'required': false
                                    }) }}

                                    <div class="is-flex align-right">
                                        <input type="submit" class="button" value="{{ 'global.button.validate'|trans }}">
                                    </div>
                                    {{ form_end(videoPresentationForm) }}
                                </div>
                            {% endif %}
                        </div>
                    {% endif %}

                    {% set lwaWTattr = 'data-wtaction="LWA" data-wtfrom="'~ app.user|wtFromDataAttrValue ~'" data-wtcontext="'~user|wtToDataAttrValue~'"' %}
                    {% if userIsMe %}
                        <div class="profil-section">
                            <h2>{{ "user.affinity.section.title"|trans }}</h2>
                            {% if user.affinityAnswer is null %}
                                {{ 'user.affinity.section.explanation.pro'|trans({
                                        '%affinity_form_url%': path('front_affinity_pro_form'),
                                        '%datawtattr%' : lwaWTattr|raw
                                    })|raw }}
                            {% else %}
                                <p>{{ 'user.affinity.section.edit.pro'|trans({
                                        '%affinity_form_url%': path('front_affinity_pro_form'),
                                        '%datawtattr%' : lwaWTattr|raw
                                    })|raw }}</p>
                            {% endif %}
                        </div>
                    {% elseif user.affinityAnswer is not null and (app.user is null or app.user.isPersonal) %}
                        {% set userAffinity = user.getAffinityDegreesWith(app.user) %}
                        {% if userAffinity is not null %}
                            <div class="profil-section">
                                <h2>{{ "user.affinity.section.our_affinities"|trans }}
                                    {{ include('front/Affinity/includes/affinity_degreee_element.html.twig', {enable_dropdown : false}) }}</h2>
                                <canvas class="js-radar-chart" data-dataset="{{ userAffinity is not null ? userAffinity.radarChartData|json_encode}}"></canvas>
                            </div>
                        {% else %}
                            <div class="block-grid align-middle block-dark-blue block-shadow padding-bottom-1 padding-top-1 margin-bottom-1">
                                <div class="column small-12 large-8 text-justify">
                                    <h2>{{ "user.affinity.section.our_affinities"|trans }}
                                        {{ include('front/Affinity/includes/affinity_degreee_element.html.twig', {enable_dropdown : false}) }}</h2>
                                    {{ isLogged ? 'user.affinity.degree.explanation.personal.logged'|trans({'%username%':user.firstname|title})
                                        : 'user.affinity.degree.explanation.personal.unlogged'|trans({'%username%':user.firstname|title}) }}
                                </div>
                                <div class="column small-12 medium-6 medium-offset-3 large-4 large-offset-0">
                                    <a href="{{ path('front_affinity_personal_form') }}"
                                       class="button expand-height square dark-blue" {{ lwaWTattr }}>
                                        {{ isLogged ? 'user.affinity.degree.calltoaction.fill_form'|trans:'global.button.register'|trans }}</a>
                                </div>
                            </div>
                        {% endif %}
                    {% endif %}
                </div>

                {# Right column #}
                <div class="js-pro-profil-right-column profil-seller-right-column column small-12 large-4">
                    {% if userIsMe %}
                        <div class="profil-section garages-card">
                            {% include 'front/User/includes/brand_list.html.twig' %}
                        </div>
                    {% endif %}

                    {% set userSpecialities = user.proUserSpecialities %}
                    {% set proServices = user.proUserServices(true) %}
                    {% set userHobbies = user.hobbies %}
                    {% if userSpecialities |length > 0 or proServices|length > 0 or userHobbies|length > 0 %}
                        <div class="seller-services">
                            {% if userSpecialities |length > 0 %}
                                <div>
                                    <h2>{{ 'user.profile.proservices.specialities.title'|trans }}</h2>
                                    <div class="tag-container">
                                        {% for proUserProSpeciality in userSpecialities %}
                                            <a href="{{ path('front_directory_by_service_view', {'speciality': proUserProSpeciality.proService.slug}) }}"
                                               class="tag">{{ proUserProSpeciality.proService.name }}</a>
                                        {% endfor %}
                                    </div>
                                </div>
                            {% endif %}

                            {% if proServices|length > 0 %}
                                <div>
                                    <h2>{{ 'user.profile.proservices.services.title'|trans }}</h2>
                                    <div class="tag-container">
                                        {% for proUserProService in proServices %}
                                            <a href="{{ path('front_directory_by_service_view', {'speciality': proUserProService.proService.slug}) }}"
                                               class="tag">{{ proUserProService.proService.name }}</a>
                                        {% endfor %}
                                    </div>
                                </div>
                            {% endif %}

                            {% if userHobbies|length > 0 %}
                                <div>
                                    <h2>{{ 'user.profile.hobbies.title'|trans }}</h2>
                                    <div class="hobby-container">
                                        {% for userHobby in userHobbies %}
                                            <span class="hobby-icon" title="{{ userHobby.name }}">
                                                <img src="{{ asset('assets/images/hobbies/'~userHobby.icon) }}" alt="{{ userHobby.name }}">
                                            </span>
                                        {% endfor %}
                                    </div>
                                </div>
                            {% endif %}
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>

        {% if vehicles.totalHits > 0 %}
            <div class="js-pro-profil-vehicles profil-seller-vehicles column small-12">
                <h2>{{ 'user.vehicles.title'|trans }}</h2>
                {% include 'front/Garages/Detail/includes/tabs_vehicles.html.twig' with {
                    'pagination_route': 'front_view_pro_user_info',
                    'pagination_route_params': {'slug':user.slug},
                    'displayNbOfResult' : false,
                    'isEditableByCurrentUser' : false
                } %}{# isEditableByCurrentUser is false to hide link "Add a vehicle" because no garage is selected in case of multi-garage #}
            </div>
        {% endif %}

        {% if userIsMe %}
            <div class="column small-12">
                <div class="profil-seller-delete-section">
                    <h2>{{ 'user.profile.delete.title'|trans }}</h2>
                    <p>{{ 'user.profile.delete.link.information'|trans }}
                        <a href="{{ path('front_user_delete') }}" class="text-underline">{{ 'global.button.delete'|trans }}</a>
                    </p>
                </div>
            </div>
        {% endif %}
    </section>

    {% if contactForm is not null %}
        {# On mobile device : button to send a message fixed at screen bottom #}
        <div class="profil-seller-contact-form show-for-small-only block-grid small-12">
            <div class="column small-collapse small-12">
                <span class="button add icon-message" data-toggle="contactFormOffCanvas">{{ 'global.button.contact_freely'|trans }}</span>
            </div>
        </div>
        <div class="show-for-small-only off-canvas position-bottom is-closed" id="contactFormOffCanvas" data-off-canvas>
            <a class="close-action" aria-label="close contact form" data-close><span aria-hidden="true">&mdash;</span></a>

            <div class="off-canvas-content-element">
                <div class="js-pro-profil-contact-form-container">
                    <h2>{{ 'user.pro_contact.title'|trans }}</h2>
                    <button class="show-for-small-only profil-seller-contact-form-close-button close-button" aria-label="Close contact form" type="button" data-close>
                        <span aria-hidden="true">&times;</span>
                    </button>

                    {{ form_start(contactForm, {
                        'attr': {'data-abide' : 'data-abide','novalidate' : 'novalidate'}
                    }) }}
                    {% if contactForm.firstname is defined %}
                        <div>
                            {{ form_widget(contactForm.firstname, {
                                'label': 'user.pro_contact.form.field.firstname.label'|trans,
                                'label_class': 'show-for-sr',
                                'placeholder': 'user.pro_contact.form.field.firstname.placeholder'|trans
                            }) }}
                            {{ form_errors(contactForm.firstname) }}
                        </div>
                    {% endif %}
                    {% if contactForm.lastname is defined %}
                        <div>
                            {{ form_widget(contactForm.lastname, {
                                'label': 'user.pro_contact.form.field.lastname.label'|trans,
                                'label_class': 'show-for-sr',
                                'placeholder': 'user.pro_contact.form.field.lastname.placeholder'|trans
                            }) }}
                            {{ form_errors(contactForm.lastname) }}
                        </div>
                    {% endif %}
                    {% if contactForm.phonenumber is defined %}
                        <div>
                            {{ form_widget(contactForm.phonenumber, {
                                'label': 'user.pro_contact.form.field.phonenumber.label'|trans,
                                'label_class': 'show-for-sr',
                                'placeholder': 'user.pro_contact.form.field.phonenumber.placeholder'|trans,
                                'error_message': 'user.pro_contact.form.field.phonenumber.invalid_format'|trans
                            }) }}
                            {{ form_errors(contactForm.phonenumber) }}
                        </div>
                    {% endif %}
                    {% if contactForm.email is defined %}
                        <div>
                            {{ form_widget(contactForm.email, {
                                'required': true,
                                'label': 'user.pro_contact.form.field.email.label'|trans,
                                'label_class': 'show-for-sr',
                                'placeholder': 'user.pro_contact.form.field.email.placeholder'|trans
                            }) }}
                            {{ form_errors(contactForm.email) }}
                        </div>

                    {% endif %}
                    {% if contactForm.message is defined %}
                        <div>
                            {{ form_widget(contactForm.message, {
                                'label': 'user.pro_contact.form.field.message.label'|trans,
                                'label_class': 'show-for-sr',
                                'placeholder': 'user.pro_contact.form.field.message.placeholder'|trans
                            }) }}
                            {{ form_errors(contactForm.message) }}
                        </div>
                    {% elseif contactForm.content is defined %}
                        <div>
                            {{ form_widget(contactForm.content, {
                                'label': 'conversation.answer.field.message.label'|trans({
                                    '%interlocutorProfilUrl%': (user.isPersonal ?
                                    path('front_view_personal_user_info',{'slug':user.slug}):
                                    path('front_view_pro_user_info',{'slug':user.slug})),
                                    '%interlocutorName%':user.fullName
                                })|raw,
                                'label_class': 'show-for-sr',
                                'placeholder': 'conversation.answer.field.message.placeholder'|trans,
                                'required':'true',
                                'class': 'small'
                            }) }}
                            {{ form_errors(contactForm.content) }}
                        </div>
                    {% endif %}
                    <button type="submit" class="button full-width show-for-small-only">{{ 'global.button.send'|trans }}</button>
                    <button type="submit" class="button full-width hide-for-small-only">{{ 'global.button.contact_freely'|trans }}</button>
                    {{ form_end(contactForm) }}
                </div>
            </div>
        </div>
    {% endif %}
{% endblock body %}

{% block javascripts %}
    {% if addGarageForm is not null %}
        <script>
          let autocomplete;

          function initAutocomplete() {
            let autocompleteInputField = document.getElementById('google_place');
            // Create the autocomplete object, restricting the search to geographical location types.
            autocomplete = new google.maps.places.Autocomplete(
              /** @type {!HTMLInputElement} */
              (autocompleteInputField),
              {
                types: ['establishment'],
                componentRestrictions: {country: 'fr'}
              }
            );

            // When the user selects an address from the dropdown, populate the address
            // fields in the form.
            autocomplete.addListener('place_changed', fillInAddress);
            autocompleteInputField.addEventListener('keypress', (e) => {
              if (e.key === 'Enter' || e.keyCode === 13) {
                e.preventDefault();
                return false;
              }
            });
          }

          function fillInAddress() {
            // Get the place details from the autocomplete object.
            let place = autocomplete.getPlace();

              {# Google Place Id #}
            if (place.hasOwnProperty('place_id')) {
              document.getElementById('{{ addGarageForm.googlePlaceId.vars.id }}').value = place.place_id;
            }
            if (place.hasOwnProperty('rating')) {
              document.getElementById('{{ addGarageForm.googleRating.vars.id }}').value = place.rating;
            }

              {# Address #}
            if (place.hasOwnProperty('address_components')) {
              let address = '';
              for (let i = 0; i < place.address_components.length; i++) {
                switch (place.address_components[i].types[0]) {
                  case 'street_number':
                    address = place.address_components[i]['short_name'] + address;
                    break;
                  case 'route':
                    address = address + ' ' + place.address_components[i]['short_name'];
                    break;
                  case 'postal_code':
                    document.getElementById('{{ addGarageForm.postalCode.vars.id }}').value = place.address_components[i]['short_name'];
                    break;
                  case 'locality':
                    document.getElementById('{{ addGarageForm.cityName.vars.id }}').value = (place.address_components[i]['short_name']).toUpperCase();
                    break;
                }
              }
              if (address !== '') {
                document.getElementById('{{ addGarageForm.address.vars.id }}').value = address;
              }
            }

              {# Latitude/Longitude#}
            if (place.hasOwnProperty('geometry')) {
              document.getElementById('{{ addGarageForm.latitude.vars.id }}').value = place.geometry.location.lat();
              document.getElementById('{{ addGarageForm.longitude.vars.id }}').value = place.geometry.location.lng();
            }
              {# Name #}
            if (place.hasOwnProperty('name')) {
              document.getElementById('{{ addGarageForm.name.vars.id }}').value = place.name;
            }
              {# Phone #}
            if (place.hasOwnProperty('formatted_phone_number')) {
              document.getElementById('{{ addGarageForm.phone.vars.id }}').value = place.formatted_phone_number.replace(/ /g, '');
            }

              {# Opening hours #}
            if (place.hasOwnProperty('opening_hours') && place.opening_hours.hasOwnProperty('weekday_text')) {
              let openingHours = '';
              for (let i = 0; i < place.opening_hours.weekday_text.length; i++) {
                openingHours += place.opening_hours.weekday_text[i] + '\n';
              }
              document.getElementById('{{ addGarageForm.openingHours.vars.id }}').value = openingHours;
            }
          }
        </script>
        <script type="text/javascript"
                src="https://maps.googleapis.com/maps/api/js?key={{ google_api_client_key }}&libraries=places&callback=initAutocomplete&language={{ app.request.locale|slice(0, 2) }}"
                defer async></script>
    {% endif %}
{% endblock javascripts %}

