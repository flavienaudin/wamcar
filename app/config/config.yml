imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: front_mock.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    # Define request context for url generation, inside console commands only
    router.request_context.host: '%env(REQUEST_CONTEXT_HOST)%'
    router.request_context.scheme: '%env(REQUEST_CONTEXT_SCHEME)%'
    router.request_context.base_url: '%env(REQUEST_CONTEXT_BASE_URL)%'

    placeholders:
        avatar:
            a: '/assets/images/placeholders/user/letters/a.png'
            b: '/assets/images/placeholders/user/letters/b.png'
            c: '/assets/images/placeholders/user/letters/c.png'
            d: '/assets/images/placeholders/user/letters/d.png'
            e: '/assets/images/placeholders/user/letters/e.png'
            f: '/assets/images/placeholders/user/letters/f.png'
            g: '/assets/images/placeholders/user/letters/g.png'
            h: '/assets/images/placeholders/user/letters/h.png'
            i: '/assets/images/placeholders/user/letters/i.png'
            j: '/assets/images/placeholders/user/letters/j.png'
            k: '/assets/images/placeholders/user/letters/k.png'
            l: '/assets/images/placeholders/user/letters/l.png'
            m: '/assets/images/placeholders/user/letters/m.png'
            n: '/assets/images/placeholders/user/letters/n.png'
            o: '/assets/images/placeholders/user/letters/o.png'
            p: '/assets/images/placeholders/user/letters/p.png'
            q: '/assets/images/placeholders/user/letters/q.png'
            r: '/assets/images/placeholders/user/letters/r.png'
            s: '/assets/images/placeholders/user/letters/s.png'
            t: '/assets/images/placeholders/user/letters/t.png'
            u: '/assets/images/placeholders/user/letters/u.png'
            v: '/assets/images/placeholders/user/letters/v.png'
            w: '/assets/images/placeholders/user/letters/w.png'
            x: '/assets/images/placeholders/user/letters/x.png'
            y: '/assets/images/placeholders/user/letters/y.png'
            z: '/assets/images/placeholders/user/letters/z.png'
            unknown: '/assets/images/placeholders/user/letters/unknown.png'
        banner: '/assets/images/placeholders/garages/banner.png'
        logo: '/assets/images/placeholders/garages/logo.png'
        vehicle: '/assets/images/register/pictures_default.jpg'
        form_vehicle:
            0: '/assets/images/placeholders/vehicle/Placeholder-Principale.png'
            1: '/assets/images/placeholders/vehicle/Placeholder-Profil.png'
            2: '/assets/images/placeholders/vehicle/Placeholder-Avant.png'
            3: '/assets/images/placeholders/vehicle/Placeholder-Arriere.png'

    preferred_makeName: '%preferred_makes%'
    typeform_affinity_personal_form: '%typeform.affinity.personal.form%'
    typeform_affinity_pro_form: '%typeform.affinity.pro.form%'

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    globals:
        site_version: '%css_js_unique_version%'
        site_name: '%sitename%'
        facebook_url: 'https://www.facebook.com/%facebook_username%/'
        twitter_url: 'https://twitter.com/%twitter_username%'
        twitter_username: '%twitter_username%'
        inte: '%inte%'
        facebook_page_id: '%facebook_page_id%'
        facebook_admin_ids: '%facebook_admin_ids%'
        facebook_app_id: '%env(FACEBOOK_ID)%'
        google_tag_manager_id: '%env(GOOGLE_TAG_MANAGER_ID)%'
        google_api_client_key: '%env(GOOGLE_API_CLIENT_KEY)%'
        google_api_server_key: '%env(GOOGLE_API_SERVER_KEY)%'
        pro_site_url: '%pro_space_url%'
        typeform_contact: '%typeform.contact%'
        typeform_ubiflow_request: '%typeform.ubiflow_request%'
        typeform_affinity_personal_form: '%typeform.affinity.personal.form%'
        typeform_affinity_pro_form: '%typeform.affinity.pro.form%'
    form_themes:
        - 'front/Layout/includes/forms/fields.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%env(MYSQL_HOST)%'
        port: '%env(MYSQL_PORT)%'
        dbname: '%env(MYSQL_DATABASE)%'
        user: '%env(MYSQL_USER)%'
        password: '%env(MYSQL_PASSWORD)%'
        charset:  utf8mb4
        default_table_options:
            charset: utf8mb4
            collate: utf8mb4_unicode_ci
        types:
            uuid: Ramsey\Uuid\Doctrine\UuidType
            usertitle: AppBundle\Doctrine\Type\UserTitleType
            vehicletransmission: AppBundle\Doctrine\Type\VehicleTransmissionType
            vehiclemaintenancestate: AppBundle\Doctrine\Type\VehicleMaintenanceStateType
            vehiclesafetyteststate: AppBundle\Doctrine\Type\VehicleSafetyTestStateType
            vehicleguarantee: AppBundle\Doctrine\Type\GuaranteeType
            vehiclefunding: AppBundle\Doctrine\Type\FundingType
            vehicletimingbeltstate: AppBundle\Doctrine\Type\VehicleTimingBeltStateType
            notificationfrequency: AppBundle\Doctrine\Type\NotificationFrequencyType
            garagerole: AppBundle\Doctrine\Type\GarageRoleType
            personalorientation: AppBundle\Doctrine\Type\PersonalOrientationType
            firstcontactpreference: AppBundle\Doctrine\Type\FirstContactPreferenceType

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        filters:
            softDeleteable:
                class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                enabled: true
        mappings:
            Wamcar:
                type: yml
                dir: '%kernel.root_dir%/../src/AppBundle/Resources/config/doctrine/Wamcar'
                is_bundle: false
                prefix: Wamcar
                alias: Wamcar
            AppBundle:
                type: yml
                dir: '%kernel.root_dir%/../src/AppBundle/Resources/config/doctrine/AppBundle'
                is_bundle: false
                prefix: AppBundle
                alias: AppBundle
            MgiletNotificationBundle:
                type: annotation
                is_bundle: true
            JMoseCommandSchedulerBundle: ~
            TypeForm:
                type: yml
                dir: '%kernel.root_dir%/../src/TypeForm/Resources/config/doctrine'
                is_bundle: false
                prefix: TypeForm
                alias: TypeForm
        resolve_target_entities:
            Mgilet\NotificationBundle\Entity\Notification: AppBundle\Doctrine\Entity\EventNotification
        dql:
            string_functions:
                field: DoctrineExtensions\Query\Mysql\Field

doctrine_migrations:
    dir_name:             '%kernel.root_dir%/../database/migrations'
    namespace:            Application\Migrations
    table_name:           migration_versions

# Swiftmailer Configuration
swiftmailer:
    transport: '%env(MAILER_TRANSPORT)%'
    host: '%env(MAILER_HOST)%'
    username: '%env(MAILER_USER)%'
    password: '%env(MAILER_PASSWORD)%'
    port:      '%env(MAILER_PORT)%'
    encryption: tls
    delivery_addresses: '%email_catcher_address%'
    #spool: { type: memory }

stof_doctrine_extensions:
    default_locale: fr_FR
    orm:
        default:
            softdeleteable: true
            timestampable: true
            blameable: true
            sortable: true
            sluggable: true

vich_uploader:
    db_driver: orm
    metadata:
        auto_detection: false
        directories:
            - {path: '%kernel.root_dir%/../src/AppBundle/Resources/config/uploader'}
    mappings:
        vehicle_image:
            uri_prefix:         /uploads/images/vehicles
            upload_destination: '%env(UPLOAD_DIR)%/images/vehicles'
            namer:              vich_uploader.namer_hash
            directory_namer:
                service: vich_uploader.directory_namer_subdir
                options: {chars_per_dir: 3, dirs: 2}
            inject_on_load:     true
            delete_on_remove: true
            delete_on_update: true
        user_image:
            uri_prefix:         /uploads/images/users
            upload_destination: '%env(UPLOAD_DIR)%/images/users'
            namer:              vich_uploader.namer_hash
            directory_namer:
                service: vich_uploader.directory_namer_subdir
                options: {chars_per_dir: 3, dirs: 2}
            inject_on_load:     true
            delete_on_remove: true
            delete_on_update: true
        garage_banner:
            uri_prefix:         /uploads/images/garages/banner
            upload_destination: '%env(UPLOAD_DIR)%/images/garages/banner'
            namer:              vich_uploader.namer_hash
            directory_namer:
                service: vich_uploader.directory_namer_subdir
                options: {chars_per_dir: 3, dirs: 2}
            inject_on_load:     true
            delete_on_remove: true
            delete_on_update: true
        garage_logo:
            uri_prefix:         /uploads/images/garages/logo
            upload_destination: '%env(UPLOAD_DIR)%/images/garages/logo'
            namer:              vich_uploader.namer_hash
            directory_namer:
                service: vich_uploader.directory_namer_subdir
                options: {chars_per_dir: 3, dirs: 2}
            inject_on_load:     true
            delete_on_remove: true
            delete_on_update: true
        message_attachment:
            uri_prefix:         /uploads/attachments/conversations/message
            upload_destination: '%env(UPLOAD_DIR)%/attachments/conversations/message'
            namer:              vich_uploader.namer_hash
            directory_namer:
                service: vich_uploader.directory_namer_subdir
                options: {chars_per_dir: 3, dirs: 2}
            inject_on_load:     true
            delete_on_remove: true
            delete_on_update: true

liip_imagine:
    loaders:
        uploaded_files:
            filesystem:
                data_root:
                     - '%env(IMAGINE_FILESYSTEM_ROOT)%'
                     - '%env(IMAGINE_FILESYSTEM_DEPLOYER_SHARED_ROOT)%'
    data_loader: uploaded_files
    # your filter sets are defined here
    filter_sets:
        cache: ~
        vehicle_picture:
            quality: 75
            filters:
                auto_rotate: ~
                thumbnail: { size: [800, 500] }
                watermark:
                    image: ../web/assets/images/watermark/wam.png
                    position: topright
        vehicle_mini_thumbnail:
            quality: 75
            filters:
                auto_rotate: ~
                thumbnail: { size: [120, 90], mode: outbound }
                watermark:
                    image: ../web/assets/images/watermark/wam.png
                    position: topright
                    size: 0.20
        vehicle_thumbnail:
            quality: 75
            filters:
                auto_rotate: ~
                thumbnail: { size: [310, 235], mode: outbound }
                watermark:
                    image: ../web/assets/images/watermark/wam.png
                    position: topright
                    size: 0.40
        vehicle_placeholder_picture:
            quality: 75
            filters:
                auto_rotate: ~
                thumbnail: { size: [800, 500] }
        vehicle_placeholder_mini_thumbnail:
            quality: 75
            filters:
                auto_rotate: ~
                thumbnail: { size: [120, 90], mode: outbound }
        vehicle_placeholder_thumbnail:
            quality: 75
            filters:
                auto_rotate: ~
                thumbnail: { size: [310, 235], mode: outbound }
        user_mini_thumbnail:
            quality: 100
            filters:
                auto_rotate: ~
                thumbnail: { size: [100, 100], mode: outbound }
        user_thumbnail:
            quality: 100
            filters:
                auto_rotate: ~
                thumbnail: { size: [200, 200], mode: outbound }
        garage_banner:
            quality: 75
            filters:
                auto_rotate: ~
                thumbnail: { size: [760, 340], mode: outbound, allow_upscale: true }
        garage_mini_banner:
            quality: 75
            filters:
                auto_rotate: ~
                thumbnail: { size: [360, 160], mode: outbound }
        garage_logo:
            quality: 75
            filters:
                auto_rotate: ~
                thumbnail: { size: [120, 120], mode: inset }
        garage_mini_logo:
            quality: 100
            filters:
                auto_rotate: ~
                thumbnail: { size: [50, 50], mode: inset }

hwi_oauth:
    http:
        client: Http\Adapter\Guzzle6\Client
        message_factory: Http\Message\MessageFactory\GuzzleMessageFactory

    # list of names of the firewalls in which this bundle is active, this setting MUST be set
    firewall_names: [front]

    # an optional setting to configure a query string parameter which can be used to redirect
    # the user after authentication, e.g. /connect/facebook?_destination=/my/destination will
    # redirect the user to /my/destination after facebook authenticates them.  If this is not
    # set then the user will be redirected to the original resource that they requested, or
    # the base address if no resource was requested.  This is similar to the behaviour of
    # [target_path_parameter for form login](http://symfony.com/doc/2.0/cookbook/security/form_login.html).
    target_path_parameter: _destination

    # an optional setting to use the HTTP REFERER header to be used in case no
    # previous URL was stored in the session (i.e. no resource was requested).
    # This is similar to the behaviour of
    # [using the referring URL for form login](http://symfony.com/doc/2.0/cookbook/security/form_login.html#using-the-referring-url).
    use_referer: true

    resource_owners:
        facebook:
            type: facebook
            client_id: '%env(FACEBOOK_ID)%'
            client_secret: '%env(FACEBOOK_SECRET)%'
            scope: "email,public_profile"
            options:
                csrf: true
            infos_url: "https://graph.facebook.com/me?fields=id,first_name,last_name,email,picture.type(large)"
            paths:
                profilepicture: picture.data.url
        linkedin:
            type: linkedin
            client_id: '%env(LINKEDIN_ID)%'
            client_secret: '%env(LINKEDIN_SECRET)%'
            scope: "r_basicprofile,r_emailaddress"
            options:
                csrf: true
            infos_url: "https://api.linkedin.com/v1/people/~:(id,first-name,last-name,email-address,picture-url)?format=json"
            paths:
                firstname: firstName
                lastname: lastName
                profilepicture: pictureUrl
        google:
            type: google
            client_id: '%env(GOOGLE_ID)%'
            client_secret: '%env(GOOGLE_SECRET)%'
            scope: "openid email profile"
            options:
                csrf: true
            paths:
                profilepicture: picture
                gender: gender
        twitter:
            type: twitter
            client_id: '%env(TWITTER_ID)%'
            client_secret: '%env(TWITTER_SECRET)%'
            scope: " profile"
            options:
                csrf: true
                include_email: true
            paths:
                firstname: name

jmose_command_scheduler:
    # receivers for reporting mails
    monitor_mail: '%monitors_emails%'
    # to send "everything's all right" emails to receivers for reporting mails set this value to "true" (see monitoring)
    send_ok: true
    # Namespaces listed here won't be listed in the list
    excluded_command_namespaces:
        - _global
        - assets
        - cache
        - config
        - debug
        - doctrine
        - generate
        - lint
        - router
        - scheduler
        - security
        - server
        - container
        - init

easy_admin:
  site_name: 'Wamcar Entities Administration'
  design:
    brand_color: '#cc4b37'
    color_scheme: 'light'
    menu:
      - { label: "Tableau d'arministration", route: 'admin_board' }
      - { label: 'Ressources :' }
      - Garage
      - ProApplicationUser
      - PersonalApplicationUser
      - CronJobs
  formats:
    date: 'd/m/Y'
    datetime: 'd/m/Y H:i:s'
  edit:
    actions: ['-delete', 'list']
  list:
    actions:
    - { name: 'search', icon: 'search', label: false, title: 'Rechercher' }
    - { name: 'edit', icon: 'edit', label: false, title: 'Editer' }
    - { name: 'show', icon: 'eye', label: false, title: 'Voir'}
    - { name: 'delete', icon: 'trash', label: false, title: 'Supprimer' }
    - { name: '-new' } # Creation is not allow in backend
  entities:
    Garage:
      class: Wamcar\Garage\Garage
      list:
        fields:
          - { property: 'id', label: 'ID'}
          - { property: 'name', label: 'Nom'}
          - { property: 'mainAdministrator.Id', label: 'Gest. Id'}
          - { property: 'mainAdministrator.fullName', label: 'Gest. Nom'}
          - googlePlaceId
          - googleRating
          - { property: 'optionAdminSellers', label: 'Gest. vend.'}
          - { property: 'countProVehicles', label: '#Vhl.'}
          - { property: 'countMembers', label: '#Memb.'}
          - { property: 'deletedAt', label: 'Suppr.' }
        actions:
          - { name: 'viewGaragePage', icon: 'file',  label: false, title: 'Page Garage', target: '_black' }
          - { name: 'edit', icon: 'map-marker-alt', label: false, title: 'Editer' }
          - { name: 'front_garage_edit', type: 'route', icon: 'edit', label: false, title: 'Formulaire Wamcar', target: '_blank'}
      show:
        fields:
          - id
          - name
          - slug
          - googlePlaceId
          - googleRating
          - siren
          - apiClientId
          - apiSecret
          - phone
          - { property: 'email', type: 'email'}
          - openingHours
          - presentation
          - benefit
          - { property: 'address.fullAddress', label: 'Adr.'}
          - { property: 'optionAdminSellers', label: 'Gest. vendeur'}
          - { property: 'countProVehicles', label: '#Vhl.'}
          - members

      form:
        help: >
          Merci d'utiliser le formulaire Wamcar qui vous permet de modifier les informations du garage.
          Le GooglePlaceId et le GoogleRating ne doivent que être supprimé via ce formulaire car il n'est pas
          relié à l'API Google pour récupérer les informations automatiquement
          De plus, si le GooglePlaceId, le nom et/ou le SIREN sont déjà existants Alors vous aurez une erreur interne
          lors de la validation. Faire précédente et modifier alors votre saisie.
        fields:
          - { property: 'id', type_options: { disabled: 'disabled' } }
          - { property: 'googlePlaceId'}
          - { property: 'googleRating'}
          - { property: 'name'}
          - { property: 'siren'}
    ProApplicationUser:
      class: AppBundle\Doctrine\Entity\ProApplicationUser
      label: 'Conseillers automobile'
      list:
        title: 'Conseillers automobile'
        fields:
          - id
          - { property: 'fullName', label: 'Prénom Nom' }
          - { property: 'email', label: 'E-mail', type: 'email' }
          - { property: 'slug'}
          - { property: 'countVehicles', label: '#Vhl.'}
          - { property: 'createdAt', label: 'Insc.', type: 'date' }
          - { property: 'deletedAt', label: 'Suppr.', type: 'date' }
        sort: ['id', 'DESC']
        actions:
          - { name: 'viewUserProfile', icon: 'user',  label: false, title: 'Profil Wamcar', target: '_black' }
      form:
        fields:
          - { property: 'id', type_options: { disabled: 'disabled' } }
          - { property: 'email', type: 'email', label: 'Login' }
          - { property: 'slug'}
          - { property: 'description', type: 'textarea' }
      show:
        fields:
          - id
          - slug
          - email
          - userProfile.title
          - userProfile.firstName
          - userProfile.lastName
          - userProfile.description
          - userProfile.phone
          - phonePro
          - { property: 'avatar.fileName' }
          - facebookId
          - facebookAccessToken
          - linkedinId
          - linkedinAccessToken
          - googleId
          - googleAccessToken
          - twitterId
          - twitterAccessToken
          - { property: 'firstContactPreference', type: 'text' }
          - { property: 'preferences.privateMessageEmailEnabled', type: 'boolean', label: 'Pref. Nouv. Mess.' }
          - { property: 'preferences.privateMessageEmailFrequency', type: 'text', label: 'Nouv. Mess. freq.' }
          - { property: 'preferences.likeEmailEnabled', type: 'boolean', label: 'Pref. like' }
          - { property: 'preferences.likeEmailFrequency', label: 'Like Freq.' }
          - { property: 'affinityAnswer.sumittedAt', type: 'date', labe: 'WamAff Soumis le:' }
          - { property: 'affinityAnswer.treatedAt', type: 'date', label: 'WamAff Traité le:' }
          - { property: 'orientation', type: 'text' }
          - { property: 'contactAvailabilities', type: 'string' }
          - vehicles
          - garageMemberships

    PersonalApplicationUser:
      class: AppBundle\Doctrine\Entity\PersonalApplicationUser
      label: 'Particuliers'
      list:
        title: 'Particuliers'
        fields:
          - id
          - { property: 'fullName', label: 'Prénom Nom' }
          - { property: 'email', label: 'E-mail', type: 'email' }
          - { property: 'slug' }
          - { property: 'countVehicles', label: '#Vhl.'}
          - { property: 'createdAt', label: 'Insc.' }
          - { property: 'deletedAt', label: 'Suppr.' }
        sort: ['id', 'DESC']
        actions:
          - { name: 'viewUserProfile', icon: 'user',  label: false, title: 'Profil Wamcar', target: '_black' }
      form:
        fields:
          - { property: 'id', type_options: { disabled: 'disabled' } }
          - { property: 'email', type: 'email', label: 'Login' }
          - { property: 'slug'}
          - { property: 'description', type: 'textarea' }
      show:
        fields:
          - id
          - slug
          - email
          - userProfile.title
          - userProfile.firstName
          - userProfile.lastName
          - userProfile.description
          - userProfile.phone
          - userProfile.city
          - { property: 'avatar.fileName' }
          - facebookId
          - facebookAccessToken
          - linkedinId
          - linkedinAccessToken
          - googleId
          - googleAccessToken
          - twitterId
          - twitterAccessToken
          - { property: 'firstContactPreference', type: 'text' }
          - { property: 'preferences.privateMessageEmailEnabled', type: 'boolean', label: 'Pref. Nouv. Mess.' }
          - { property: 'preferences.privateMessageEmailFrequency', type: 'text', label: 'Nouv. Mess. freq.' }
          - { property: 'preferences.likeEmailEnabled', type: 'boolean', label: 'Pref. like' }
          - { property: 'preferences.likeEmailFrequency', label: 'Like Freq.' }
          - { property: 'affinityAnswer.sumittedAt', type: 'date', labe: 'WamAff Soumis le:' }
          - { property: 'affinityAnswer.treatedAt', type: 'date', label: 'WamAff Traité le:' }
          - { property: 'orientation', type: 'text' }
          - { property: 'contactAvailabilities', type: 'string' }
          - vehicles
    CronJobs:
      translation_domain: 'JMoseCommandScheduler'
      class: JMose\CommandSchedulerBundle\Entity\ScheduledCommand
      list:
        title: "list.title"
        fields:
          - { property: 'id', label: 'ID' }
          - { property: 'name', label: 'detail.name' }
          - { property: 'command', label: 'detail.command' }
          - { property: 'arguments', label: 'detail.arguments' }
          - { property: 'lastExecution', label: 'detail.lastExecution' }
          - { property: 'lastReturncode', label: 'detail.lastReturnCode' }
          - { property: 'locked', label: 'detail.locked', type: boolean}
          - { property: 'priority', label: 'detail.priority' }
          - { property: 'disabled', label: 'detail.disabled' }
        actions:
          - { name: 'jmose_command_scheduler_action_execute', type: 'route', label: 'action.execute' }
          - { name: 'jmose_command_scheduler_action_unlock', type: 'route', label: 'action.unlock' }
      form:
        fields:
          - { property: 'name', label: 'detail.name' }
          - { property: 'command', label: 'detail.command', type: 'JMose\CommandSchedulerBundle\Form\Type\CommandChoiceType' }
          - { property: 'arguments', label: 'detail.arguments' }
          - { property: 'cronExpression', label: 'detail.cronExpression' }
          - { property: 'priority', label: 'detail.priority' }
          - { property: 'disabled', label: 'detail.disabled' }
          - { property: 'logFile', label: 'detail.logFile' }
      new:
        fields:
          - { property: 'executeImmediately', label: 'detail.executeImmediately' }
